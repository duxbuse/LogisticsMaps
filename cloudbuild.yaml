steps:
#Build diceroller image from google source repository
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/$REPO_NAME:$REVISION_ID', '-f', 'Dockerfile', '.']
  timeout: 180s

# Add github branch as a tag
- name: 'gcr.io/cloud-builders/docker'
  args: ['tag', 'gcr.io/$PROJECT_ID/$REPO_NAME:$REVISION_ID', '${_TAG}']

# Add latest as a tag
- name: 'gcr.io/cloud-builders/docker'
  args: ['tag', 'gcr.io/$PROJECT_ID/$REPO_NAME:$REVISION_ID', 'latest']

  #push image to GCR with tags for the SHA, git branch and latest
- name: 'gcr.io/cloud-builders/docker'
  args: ["push", "gcr.io/$PROJECT_ID/$REPO_NAME:$REVISION_ID"]
  

# Template out kubernetes deployment yaml
- name: 'gcr.io/cloud-builders/gcloud-slim'
  args: ['envsubst', '<', 'diceroller-deployment.yml']
  env: ['tag=$REVISION_ID']


#intialise kubernetes with deployment yaml
#your clould build service account will also need permissions to deploy to GKE
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', './k8s/diceroller-deployment.yml']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_COMPUTE_ZONE}' 
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER}'